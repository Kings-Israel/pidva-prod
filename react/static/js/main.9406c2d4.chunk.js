(this["webpackJsonpreact-pidva"] = this["webpackJsonpreact-pidva"] || []).push([[0], { 42: function (e, t, s) { }, 67: function (e, t, s) { "use strict"; s.r(t); var a = s(1), i = s.n(a), n = s(19), r = s.n(n), c = (s(42), s(36)), l = s(5), d = s(6), o = s(7), h = s(4), b = s(9), j = s(8), p = s(21), m = s(15), u = s(3), O = s(22), x = s.n(O); function g(e, t) { if (e) try { for (var s = (t ? t.search.substring(1) : window.location.search.substring(1)).split("&"), a = 0; a < s.length; a++) { var i = s[a].split("="); if (i[0] === e) return i[1] } } catch (n) { return !1 } return !1 } function f(e) { var t; return e && (null === (t = e.response) || void 0 === t ? void 0 : t.data) ? e.response.data : { detail: ["A Network Error Occured! Please try again!"] } } x.a.defaults.baseURL = "https://kyc.pidva.africa/peleza-backend-server/api/"; var v = "setRegistration", N = "setRequest", y = function (e, t) { return function (s, a) { (function (e) { var t = [g("request_id"), g("moduleid")], s = t[0], a = t[1]; return x.a.post("/request/".concat(s, "/module/").concat(a, "/"), e) })(e).then((function (e) { s({ type: N, payload: e.data }), t() })).catch((function (e) { t(f(e)) })) } }, _ = function (e) { return function (t) { (function () { var e = [g("request_id"), g("moduleid")], t = e[0], s = e[1]; return x.a.get("/request/".concat(t, "/module/").concat(s, "/")) })().then((function (s) { t({ type: N, payload: s.data }), e() })).catch((function (t) { e(f(t)) })) } }, C = s(0), S = function (e) { var t = e.errors, s = e.name, a = e.className; return Object(C.jsx)(C.Fragment, { children: t && t[s] && Array.isArray(t[s]) ? t[s].map((function (e) { return Object(C.jsx)("p", { className: "small text-danger my-0 ".concat(a), children: e }) })) : Object(C.jsx)("p", { className: "small text-danger my-0 ".concat(a), children: t[s] }) }) }, E = function (e) { Object(b.a)(s, e); var t = Object(j.a)(s); function s(e) { var a; return Object(d.a)(this, s), (a = t.call(this, e)).state = { registration: { business_name: "", type: "", registration_date: "", email: "", phone_number: "", branches: "", physical_address: "", postal_address: "", kra_pin: "", member_count: "", objective: "", request_ref_number: "", registration_number: "" }, loading: !1, errors: {}, edited: !1 }, a.handleChange = a.handleChange.bind(Object(h.a)(a)), a.handleSubmit = a.handleSubmit.bind(Object(h.a)(a)), a } return Object(o.a)(s, [{ key: "componentDidMount", value: function () { this.setState({ errors: {}, registration: Object(u.a)(Object(u.a)({}, this.state.registration), this.props.registration) }) } }, { key: "validate", value: function (e) { var t = this; this.setState({ errors: {} }); var s = {};["business_name", "type", "registration_date", "registration_number"].forEach((function (e) { var a = t.state.registration[e]; void 0 !== a && "" !== a && null !== a && a || (s[e] ? s[e].push("This field is required!") : s[e] = "This field is required!") })), this.setState({ errors: s }, (function () { return e && Object.keys(s).length <= 0 ? e() : void 0 })) } }, { key: "handleChange", value: function (e) { var t = this, s = function () { return t.setState({ registration: Object(u.a)(Object(u.a)({}, t.state.registration), {}, Object(m.a)({}, e.target.name, e.target.value)) }) }; this.state.edited ? s() : this.setState({ business: this.props.registration, edited: !0 }, s) } }, { key: "handleSubmit", value: function (e) { var t = this; e.preventDefault(), this.validate((function () { t.setState({ loading: !0 }), t.props.dispatch(y({ registration: t.state.registration }, (function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; setTimeout((function () { return t.setState({ loading: !1, errors: e }, (function () { var t; 0 === Object.values(e).length && (null === (t = document.getElementById("close-add-reg-data")) || void 0 === t || t.click()) })) }), 1e3) }))) })) } }, { key: "render", value: function () { var e, t, s, a, i, n, r, c, l, d, o, h, b, j, p; return Object(C.jsx)("div", { id: "add-reg-data", className: "modal  fade", tabIndex: -1, children: Object(C.jsx)("div", { className: "modal-dialog", children: Object(C.jsxs)("div", { className: "modal-content", children: [Object(C.jsx)("div", { className: "modal-header no-padding", children: Object(C.jsxs)("div", { className: "table-header", children: [Object(C.jsx)("button", { type: "button", className: "close", "data-dismiss": "modal", "aria-hidden": "true", id: "close-add-reg-data", disabled: this.state.loading, children: Object(C.jsx)("span", { className: "white", children: "\xd7" }) }), (null === (e = this.props.registration) || void 0 === e ? void 0 : e.business_name) ? "Edit" : "Add", " ", "Company/Business Business Data"] }) }), Object(C.jsxs)("div", { className: "modal-body padding", children: [Object(C.jsx)("div", { className: "text-center", children: Object(C.jsx)(S, { errors: this.state.errors, name: "detail" }) }), Object(C.jsxs)("form", { onSubmit: this.handleSubmit, children: [Object(C.jsxs)("div", { className: "d-flex", children: [Object(C.jsx)("label", { htmlFor: "business_name", className: "col-sm-4", children: "Business/Company Name" }), Object(C.jsx)("input", { type: "text", name: "business_name", id: "business_name", className: "form-control", required: !0, onChange: this.handleChange, defaultValue: null === (t = this.props.registration) || void 0 === t ? void 0 : t.business_name, placeholder: "Company/Business Name (required)", disabled: this.state.loading }), Object(C.jsx)(S, { errors: this.state.errors, name: "business_name" })] }), Object(C.jsx)("br", {}), Object(C.jsxs)("div", { className: "d-flex", children: [Object(C.jsx)("label", { htmlFor: "type", className: "col-sm-4", children: "Business/Company Type" }), Object(C.jsxs)("select", { name: "type", id: "type", className: "form-control", required: !0, onChange: this.handleChange, defaultValue: this.state.registration.type, disabled: this.state.loading, children: [Object(C.jsx)("option", { disabled: !0, value: "", defaultChecked: !(null === (s = this.props.registration) || void 0 === s ? void 0 : s.type), children: (null === (a = this.props.registration) || void 0 === a ? void 0 : a.type) ? "".concat(this.props.registration.type, " selected") : "Select Option" }), Object(C.jsx)("option", { value: "business", children: "Business" }), Object(C.jsx)("option", { value: "company", children: "Company" }), Object(C.jsx)("option", { value: "cbo", children: "Community Based Organisation (CBO)" }), Object(C.jsx)("option", { value: "trust", children: "Trust" }), Object(C.jsx)("option", { value: "society", children: "Society" }), Object(C.jsx)("option", { value: "sacco", children: "Cooperative SACCO" }), Object(C.jsx)("option", { value: "ngo", children: "Non Govermental Organisation (NGO)" }), Object(C.jsx)("option", { value: "llp", children: "Limited Liability Partnerships (LLP)" }), Object(C.jsx)("option", { value: "clg", children: "Company Limited By Guarantree (CLG)" }), Object(C.jsx)("option", { value: "international", children: "International/Foreign Company" })] }), Object(C.jsx)(S, { errors: this.state.errors, name: "type" })] }), Object(C.jsx)("hr", {}), Object(C.jsxs)("div", { className: "d-flex", children: [Object(C.jsx)("label", { htmlFor: "registration_number", className: "col-sm-4", children: "Registration Number" }), Object(C.jsx)("input", { id: "registration_number", type: "text", name: "registration_number", className: "form-control", required: !0, placeholder: "Registration Number (required)", onChange: this.handleChange, defaultValue: null === (i = this.props.registration) || void 0 === i ? void 0 : i.registration_number, disabled: this.state.loading }), Object(C.jsx)(S, { errors: this.state.errors, name: "registration_number" })] }), Object(C.jsx)("br", {}), Object(C.jsxs)("div", { className: "d-flex", children: [Object(C.jsx)("label", { htmlFor: "registration_number", className: "col-sm-4", children: "Registration Date" }), Object(C.jsx)("input", { id: "registration_number", type: "text", name: "registration_date", className: "form-control", required: !0, placeholder: "Registration Date (required)", onChange: this.handleChange, defaultValue: null === (n = this.props.registration) || void 0 === n ? void 0 : n.registration_date, disabled: this.state.loading }), Object(C.jsx)(S, { errors: this.state.errors, name: "registration_date" })] }), Object(C.jsx)("br", {}), Object(C.jsxs)("div", { className: "d-flex", children: [Object(C.jsx)("label", { htmlFor: "kra_pin", className: "col-sm-4", children: "KRA PIN" }), Object(C.jsx)("input", { type: "text", name: "kra_pin", id: "kra_pin", className: "form-control", placeholder: "KRA PIN (optional)", onChange: this.handleChange, defaultValue: null === (r = this.props.registration) || void 0 === r ? void 0 : r.kra_pin, disabled: this.state.loading }), Object(C.jsx)(S, { errors: this.state.errors, name: "kra_pin" })] }), Object(C.jsx)("hr", {}), Object(C.jsxs)("div", { className: "d-flex", children: [Object(C.jsx)("label", { htmlFor: "email", className: "col-sm-4", children: "Email Address" }), Object(C.jsx)("input", { type: "email", name: "email", id: "email", className: "form-control", placeholder: "Email (optional)", onChange: this.handleChange, defaultValue: null === (c = this.props.registration) || void 0 === c ? void 0 : c.email, disabled: this.state.loading }), Object(C.jsx)(S, { errors: this.state.errors, name: "email" })] }), Object(C.jsx)("br", {}), Object(C.jsxs)("div", { className: "d-flex", children: [Object(C.jsx)("label", { htmlFor: "phone_number", className: "col-sm-4", children: "Phone Number" }), Object(C.jsx)("input", { type: "text", name: "phone_number", id: "phone_number", className: "form-control", placeholder: "Phone Number (optional)", onChange: this.handleChange, defaultValue: null === (l = this.props.registration) || void 0 === l ? void 0 : l.phone_number, disabled: this.state.loading }), Object(C.jsx)(S, { errors: this.state.errors, name: "phone_number" })] }), Object(C.jsx)("br", {}), Object(C.jsxs)("div", { className: "d-flex", children: [Object(C.jsx)("label", { htmlFor: "email", className: "col-sm-4", children: "Physical Address" }), Object(C.jsx)("textarea", { name: "physical_address", id: "physical_address", className: "form-control", placeholder: "Physical Address (optional)", onChange: this.handleChange, defaultValue: null === (d = this.props.registration) || void 0 === d ? void 0 : d.physical_address, disabled: this.state.loading }), Object(C.jsx)(S, { errors: this.state.errors, name: "physical_address" })] }), Object(C.jsx)("br", {}), Object(C.jsxs)("div", { className: "d-flex", children: [Object(C.jsx)("label", { htmlFor: "email", className: "col-sm-4", children: "Postal Address" }), Object(C.jsx)("input", { type: "text", name: "postal_address", id: "postal_address", className: "form-control", placeholder: "Postal Address (optional)", onChange: this.handleChange, defaultValue: null === (o = this.props.registration) || void 0 === o ? void 0 : o.postal_address, disabled: this.state.loading }), Object(C.jsx)(S, { errors: this.state.errors, name: "postal_address" })] }), Object(C.jsx)("br", {}), Object(C.jsxs)("div", { className: "d-flex", children: [Object(C.jsx)("label", { htmlFor: "branches", className: "col-sm-4", children: "Branches" }), Object(C.jsx)("textarea", { name: "branches", id: "branches", className: "form-control", placeholder: "Branches (optional)", onChange: this.handleChange, defaultValue: null === (h = this.props.registration) || void 0 === h ? void 0 : h.branches, disabled: this.state.loading }), Object(C.jsx)(S, { errors: this.state.errors, name: "branches" })] }), this.props.conditions.member_count.includes(String(this.state.registration.type).toString()) && Object(C.jsxs)(C.Fragment, { children: [Object(C.jsx)("hr", {}), Object(C.jsxs)("div", { className: "d-flex", children: [Object(C.jsx)("label", { htmlFor: "member_count", className: "col-sm-4", children: "Number of Members" }), Object(C.jsx)("input", { type: "text", name: "member_count", id: "member_count", className: "form-control", placeholder: "Number Of Members (optional)", onChange: this.handleChange, defaultValue: null === (b = this.props.registration) || void 0 === b ? void 0 : b.member_count, disabled: this.state.loading }), Object(C.jsx)(S, { errors: this.state.errors, name: "member_count" })] }), Object(C.jsx)("br", {})] }), (null === (j = this.props.conditions) || void 0 === j ? void 0 : j.objectives.includes(String(null === (p = this.props.registration) || void 0 === p ? void 0 : p.type).toString())) && Object(C.jsxs)(C.Fragment, { children: [Object(C.jsx)("hr", {}), Object(C.jsxs)("div", { className: "d-flex", children: [Object(C.jsx)("label", { htmlFor: "objective", className: "col-sm-4", children: "Objective" }), Object(C.jsx)("textarea", { name: "objective", id: "objective", className: "form-control", placeholder: "Objective (optional)", onChange: this.handleChange, disabled: this.state.loading }), Object(C.jsx)(S, { errors: this.state.errors, name: "objective" })] })] }), Object(C.jsx)("br", {}), Object(C.jsxs)("div", { className: "modal-footer no-margin-top bg-white", children: [Object(C.jsxs)("button", { className: "btn btn-sm btn-danger pull-left", "data-dismiss": "modal", type: "reset", disabled: this.state.loading, children: [Object(C.jsx)("i", { className: "ace-icon fa fa-times" }), "Close"] }), Object(C.jsxs)("button", { className: "btn btn-sm btn-info pull-left", type: "submit", disabled: this.state.loading, children: [Object(C.jsx)("i", { className: "ace-icon fa fa-check" }), this.state.loading ? "Saving" : "Save"] })] })] })] })] }) }) }) } }]), s }(a.Component), k = function (e) { Object(b.a)(s, e); var t = Object(j.a)(s); function s() { return Object(d.a)(this, s), t.apply(this, arguments) } return Object(o.a)(s, [{ key: "registration", get: function () { return this.props.registration } }, { key: "render", value: function () { var e, t, s, a, i, n, r, c, l, d, o, h, b; return Object(C.jsxs)("div", { className: "col-lg-12", children: [Object(C.jsx)(E, { registration: this.registration, dispatch: this.props.dispatch, conditions: this.props.conditions }), Object(C.jsxs)("div", { className: "d-flex align-items-center justify-content-space-between", children: [Object(C.jsx)("h3", { className: " smaller lighter blue ", children: Object(C.jsx)("strong", { children: "REGISTRATION DETAILS: " }) }), Object(C.jsx)("div", { className: "d-flex", style: { paddingRight: "1rem" }, children: Object(C.jsx)("button", { "data-target": "#add-reg-data", "data-toggle": "modal", className: "btn btn-sm btn-primary space-x", children: this.props.registration.business_name ? "Edit" : "Add" }) })] }), Object(C.jsxs)("table", { id: "simple-table", className: "table table-bordered table-hover", children: [Object(C.jsx)("thead", { children: Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "#" }), Object(C.jsx)("th", { children: "Data" })] }) }), Object(C.jsxs)("tbody", { children: [Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "COMPANY/BUSINESS NAME" }), Object(C.jsx)("td", { children: (null === (e = this.props.registration) || void 0 === e ? void 0 : e.business_name) || "-" })] }), Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "COMPANY TYPE" }), Object(C.jsx)("td", { children: String((null === (t = this.props.registration) || void 0 === t ? void 0 : t.type) || "").toUpperCase() || "-" })] }), Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "REGISTRATION NUMBER" }), Object(C.jsx)("td", { children: (null === (s = this.props.registration) || void 0 === s ? void 0 : s.registration_number) || "-" })] }), Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "REGISTRATION DATE" }), Object(C.jsx)("td", { children: (null === (a = this.props.registration) || void 0 === a ? void 0 : a.registration_date) || "-" })] }), Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "KRA PIN" }), Object(C.jsx)("td", { children: (null === (i = this.props.registration) || void 0 === i ? void 0 : i.kra_pin) || "-" })] }), Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "PHONE NUMBER" }), Object(C.jsx)("td", { children: (null === (n = this.props.registration) || void 0 === n ? void 0 : n.phone_number) || "-" })] }), Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "EMAIL ADDRESS" }), Object(C.jsx)("td", { children: (null === (r = this.props.registration) || void 0 === r ? void 0 : r.email) || "-" })] }), Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "PHYSICAL ADDRESS" }), Object(C.jsx)("td", { children: (null === (c = this.props.registration) || void 0 === c ? void 0 : c.physical_address) || "-" })] }), Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "POSTAL ADDRESS" }), Object(C.jsx)("td", { children: (null === (l = this.props.registration) || void 0 === l ? void 0 : l.postal_address) || "-" })] }), Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "BRANCHES" }), Object(C.jsx)("td", { children: (null === (d = this.props.registration) || void 0 === d ? void 0 : d.branches) || "-" })] }), this.props.conditions.member_count.includes(null === (o = String(this.props.registration.type)) || void 0 === o ? void 0 : o.toString()) && Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "NO OF MEMBERS" }), Object(C.jsx)("td", { children: (null === (h = this.props.registration) || void 0 === h ? void 0 : h.member_count) || "-" })] }), this.props.conditions.objectives.includes(String(this.props.registration.type).toString()) && Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "OBJECTIVE" }), Object(C.jsx)("td", { children: (null === (b = this.props.registration) || void 0 === b ? void 0 : b.objective) || "-" })] })] })] })] }) } }]), s }(a.Component), A = function (e) { Object(b.a)(s, e); var t = Object(j.a)(s); function s(e) { var a; return Object(d.a)(this, s), (a = t.call(this, e)).state = { loading: !1, errors: {}, editing: 0, partner: { id_number: "", id_type: "", first_name: "", second_name: "", number_of_shares: "", third_name: "", address: "", description: "", nationality: "", pk: null } }, a.handleSubmit = a.handleSubmit.bind(Object(h.a)(a)), a.handleChange = a.handleChange.bind(Object(h.a)(a)), a } return Object(o.a)(s, [{ key: "handleSubmit", value: function (e) { var t = this; e.preventDefault(), this.setState({ errors: {}, loading: !0 }, (function () { return t.props.dispatch(y({ partner: t.state.partner }, (function (e) { if (t.setState({ errors: e, loading: !1 }), !e) { var s = document.querySelector("form.add-partners"); window.JQuery(".modal").modal("hide"), s && s[0].reset() } }))) })) } }, { key: "handleChange", value: function (e) { this.setState({ partner: Object(u.a)(Object(u.a)({}, this.state.partner), {}, Object(m.a)({}, e.target.name, e.target.value)) }) } }, { key: "componentDidMount", value: function () { this.props.id && this.props.partner && this.setState({ partner: this.props.partner }) } }, { key: "render", value: function () { return Object(C.jsx)(C.Fragment, { children: Object(C.jsx)("div", { className: "modal fade", id: "".concat(this.props.id ? this.props.id : "add-partners"), children: Object(C.jsx)("div", { className: "modal-dialog", children: Object(C.jsxs)("div", { className: "modal-content", children: [Object(C.jsx)("div", { className: "modal-header no-padding", children: Object(C.jsxs)("div", { className: "table-header", children: [Object(C.jsx)("button", { type: "button", className: "close", "data-dismiss": "modal", "aria-hidden": "true", id: "close-add-partners", disabled: this.state.loading, children: Object(C.jsx)("span", { className: "white", children: "\xd7" }) }), this.props.partner ? "Edit" : "Add", " Partners & Shares Data"] }) }), Object(C.jsx)("div", { className: "modal-body", children: Object(C.jsxs)("form", { className: "add-partners", onSubmit: this.handleSubmit, children: [Object(C.jsxs)("div", { className: "d-flex", children: [Object(C.jsx)("label", { className: "col-sm-3", children: "First Name" }), Object(C.jsx)("input", { type: "text", className: "form-control space-x", placeholder: "First Name", defaultValue: this.props.partner ? this.props.partner.first_name : "", disabled: this.state.loading, onChange: this.handleChange, name: "first_name", required: !0 })] }), Object(C.jsx)("br", {}), Object(C.jsxs)("div", { className: "d-flex", children: [Object(C.jsx)("label", { className: "col-sm-3", children: "Second Name" }), Object(C.jsx)("input", { type: "text", className: "form-control space-x", placeholder: "Second Name", defaultValue: this.props.partner ? this.props.partner.second_name : "", disabled: this.state.loading, onChange: this.handleChange, name: "second_name" })] }), Object(C.jsx)("br", {}), Object(C.jsxs)("div", { className: "d-flex", children: [Object(C.jsx)("label", { className: "col-sm-3", children: "Other Names" }), Object(C.jsx)("input", { type: "text", className: "form-control space-x", placeholder: "Other Names", defaultValue: this.props.partner ? this.props.partner.third_name : "", disabled: this.state.loading, onChange: this.handleChange, name: "third_name" })] }), Object(C.jsx)("hr", {}), Object(C.jsxs)("div", { className: "d-flex", children: [Object(C.jsx)("label", { className: "col-sm-3", children: "ID Number" }), Object(C.jsx)("input", { type: "text", className: "form-control space-x", placeholder: "ID Number", defaultValue: this.props.partner ? this.props.partner.id_number : "", disabled: this.state.loading, onChange: this.handleChange, name: "id_number" })] }), Object(C.jsx)("br", {}), Object(C.jsxs)("div", { className: "d-flex", children: [Object(C.jsx)("label", { className: "col-sm-3", children: "ID Type" }), Object(C.jsx)("input", { type: "text", className: "form-control space-x", placeholder: "ID Type", defaultValue: this.props.partner ? this.props.partner.id_type : "", disabled: this.state.loading, onChange: this.handleChange, name: "id_type" })] }), Object(C.jsx)("br", {}), Object(C.jsxs)("div", { className: "d-flex", children: [Object(C.jsx)("label", { className: "col-sm-3", children: "Shares" }), Object(C.jsx)("textarea", { className: "form-control space-x", placeholder: "Shares i.e. SHARES-NAME:VALUE", defaultValue: this.props.partner ? this.props.partner.number_of_shares : "", disabled: this.state.loading, onChange: this.handleChange, name: "number_of_shares" })] }), ("clg" === this.props.type || "business" === this.props.type || "company" === this.props.type) && Object(C.jsxs)(C.Fragment, { children: [Object(C.jsx)("hr", {}), Object(C.jsxs)("div", { className: "d-flex", children: [Object(C.jsx)("label", { className: "col-sm-3", children: "Description" }), Object(C.jsx)("input", { type: "text", className: "form-control space-x", placeholder: "Description", defaultValue: this.props.partner ? this.props.partner.description : "", disabled: this.state.loading, onChange: this.handleChange, name: "description" })] }), Object(C.jsx)("br", {}), Object(C.jsxs)("div", { className: "d-flex", children: [Object(C.jsx)("label", { className: "col-sm-3", children: "Nationality" }), Object(C.jsx)("input", { type: "text", className: "form-control space-x", placeholder: "Nationality", defaultValue: this.props.partner ? this.props.partner.nationality : "", disabled: this.state.loading, onChange: this.handleChange, name: "nationality" })] }), Object(C.jsx)("br", {}), Object(C.jsxs)("div", { className: "d-flex", children: [Object(C.jsx)("label", { className: "col-sm-3", children: "Address" }), Object(C.jsx)("textarea", { className: "form-control space-x", placeholder: "Address", defaultValue: this.props.partner ? this.props.partner.address : "", disabled: this.state.loading, onChange: this.handleChange, name: "address" })] }), Object(C.jsx)("br", {})] }), Object(C.jsxs)("div", { className: "modal-footer no-margin-top bg-white", children: [Object(C.jsxs)("button", { className: "btn btn-sm btn-danger pull-left", "data-dismiss": "modal", type: "reset", disabled: this.state.loading, children: [Object(C.jsx)("i", { className: "ace-icon fa fa-times" }), "Close"] }), Object(C.jsxs)("button", { className: "btn btn-sm btn-info pull-left", type: "submit", disabled: this.state.loading, children: [Object(C.jsx)("i", { className: "ace-icon fa fa-check" }), this.state.loading ? "Saving" : "Save"] })] })] }) })] }) }) }) }) } }]), s }(a.Component), R = function (e) { Object(b.a)(s, e); var t = Object(j.a)(s); function s() { return Object(d.a)(this, s), t.apply(this, arguments) } return Object(o.a)(s, [{ key: "del", value: function (e) { this.props.dispatch(y({ partner: e, delete: !0 }, (function () { }))) } }, { key: "render", value: function () { var e, t, s = this; return Object(C.jsxs)("div", { className: "col-lg-12", children: [Object(C.jsx)(A, { dispatch: this.props.dispatch, type: this.props.type }), Object(C.jsxs)("div", { className: "d-flex align-items-center justify-content-space-between", children: [Object(C.jsx)("h3", { className: " smaller lighter blue ", children: Object(C.jsx)("strong", { children: "PARTNERS & SHARES DETAILS: " }) }), Object(C.jsx)("div", { className: "d-flex", style: { paddingRight: "1rem" }, children: Object(C.jsx)("button", { "data-target": "#add-partners", "data-toggle": "modal", className: "btn btn-sm btn-primary space-x", children: "Add" }) })] }), this.props.partners && (null === (e = this.props.partners) || void 0 === e ? void 0 : e.length) > 0 && Object(C.jsxs)("table", { className: "table table-striped table-bordered table-hover", children: [Object(C.jsx)("thead", { children: Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "Name" }), Object(C.jsx)("th", { children: "ID Number" }), Object(C.jsx)("th", { children: "ID Type" }), Object(C.jsx)("th", { children: "No of Shares" }), Object(C.jsx)("th", { children: "Description" }), ("clg" === this.props.type || "business" === this.props.type || "company" === this.props.type) && Object(C.jsxs)(C.Fragment, { children: [Object(C.jsx)("th", { children: "Address" }), Object(C.jsx)("th", { children: "Nationality" }), Object(C.jsx)("th", { children: "Action" })] })] }) }), Object(C.jsx)("tbody", { children: null === (t = this.props.partners) || void 0 === t ? void 0 : t.map((function (e, t) { var a = "add-partners-".concat(t); return Object(C.jsxs)("tr", { children: [Object(C.jsx)("td", { children: [e.first_name || "-", e.second_name, e.third_name].join(" ").toUpperCase() }), Object(C.jsx)("td", { children: e.id_number || "-" }), Object(C.jsx)("td", { children: e.id_type || "-" }), Object(C.jsx)("td", { children: e.number_of_shares || "-" }), ("clg" === s.props.type || "business" === s.props.type || "company" === s.props.type) && Object(C.jsxs)(C.Fragment, { children: [Object(C.jsx)("td", { children: e.description || "-" }), Object(C.jsx)("td", { children: e.address || "-" }), Object(C.jsx)("td", { children: e.nationality || "-" })] }), Object(C.jsx)("td", { children: Object(C.jsxs)("div", { className: "d-flex justify-content-end", children: [Object(C.jsx)("button", { className: "btn btn-sm btn-info space-x", "data-target": "#".concat(a), "data-toggle": "modal", children: "Edit" }), Object(C.jsx)("button", { className: "btn btn-sm btn-danger space-x", onClick: function () { return s.del(e) }, children: "Del" }), Object(C.jsx)(A, { partner: e, id: a, dispatch: s.props.dispatch, type: s.props.type }, a)] }) })] }) })) })] })] }) } }]), s }(a.Component), D = function (e) { Object(b.a)(s, e); var t = Object(j.a)(s); function s(e) { var a; return Object(d.a)(this, s), (a = t.call(this, e)).state = { loading: !1 }, a.add = a.add.bind(Object(h.a)(a)), a } return Object(o.a)(s, [{ key: "add", value: function (e) { var t = this, s = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]; this.setState({ loading: !0 }, (function () { return t.props.dispatch(y({ share_capital: e, delete: s }, (function (e) { t.setState({ loading: !1 }), e || window.JQuery(".modal").modal("hide") }))) })) } }, { key: "render", value: function () { var e, t, s = this; return Object(C.jsxs)("div", { className: "col-lg-12", children: [Object(C.jsx)(q, { dispatch: this.props.dispatch, add_share_capital: this.add, loading: this.state.loading }), Object(C.jsxs)("div", { className: "d-flex align-items-center justify-content-space-between", children: [Object(C.jsx)("h3", { className: " smaller lighter blue ", children: Object(C.jsx)("strong", { children: "SHARE CAPITAL DETAILS: " }) }), Object(C.jsx)("div", { className: "d-flex", style: { paddingRight: "1rem" }, children: Object(C.jsx)("button", { "data-target": "#add-share-capital", "data-toggle": "modal", className: "btn btn-sm btn-primary space-x", children: "Add" }) })] }), this.props.share_capital && (null === (e = this.props.share_capital) || void 0 === e ? void 0 : e.length) > 0 && Object(C.jsxs)("table", { id: "simple-table", className: "table  table-striped  table-bordered table-hover", children: [Object(C.jsx)("thead", { children: Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "Name" }), Object(C.jsx)("th", { children: "Nominal Value" }), Object(C.jsx)("th", { children: "No of shares" }), Object(C.jsx)("th", { children: "Action" })] }) }), Object(C.jsx)("tbody", { children: null === (t = this.props.share_capital) || void 0 === t ? void 0 : t.map((function (e) { var t, a = "add-share-capital".concat(null === (t = e.name) || void 0 === t ? void 0 : t.replace(" ", "")); return Object(C.jsxs)("tr", { children: [Object(C.jsx)("td", { children: e.name || "-" }), Object(C.jsx)("td", { children: e.nominal_value || "-" }), Object(C.jsx)("td", { children: e.number_of_shares || "-" }), Object(C.jsx)("td", { children: Object(C.jsxs)("div", { className: "d-flex justify-content-end", children: [Object(C.jsx)("button", { className: "btn btn-sm btn-info space-x", "data-target": "#".concat(a), "data-toggle": "modal", children: "Edit" }), Object(C.jsx)("button", { onClick: function () { return s.add(e, !0) }, className: "btn btn-sm btn-danger space-x", children: "Del" }), Object(C.jsx)(q, { add_share_capital: s.add, dispatch: s.props.dispatch, share_capital: e, id: a, loading: s.state.loading })] }) })] }) })) })] })] }) } }]), s }(a.Component), q = function (e) { Object(b.a)(s, e); var t = Object(j.a)(s); function s(e) { var a; return Object(d.a)(this, s), (a = t.call(this, e)).state = { errors: {}, share_capital: { name: "", nominal_value: 0, number_of_shares: 0 } }, a.handleSubmit = a.handleSubmit.bind(Object(h.a)(a)), a.handleChange = a.handleChange.bind(Object(h.a)(a)), a } return Object(o.a)(s, [{ key: "handleSubmit", value: function (e) { var t = this; e.preventDefault(), this.validate((function () { 0 === Object.keys(t.state.errors).length && t.props.add_share_capital(t.state.share_capital) })) } }, { key: "componentDidMount", value: function () { this.props.share_capital && this.setState({ share_capital: this.props.share_capital }) } }, { key: "validate", value: function (e) { var t = {}; this.state.share_capital.name || (t.name = "This Field is required!"), this.state.share_capital.nominal_value || (t.nominal_value = "This Field is required!"), this.state.share_capital.number_of_shares || (t.number_of_shares = "This Field is required!"), this.setState({ errors: t }, (function () { return e() })) } }, { key: "handleChange", value: function (e) { var t = Object(m.a)({}, e.target.name, e.target.value); this.setState({ share_capital: Object(u.a)(Object(u.a)({}, this.state.share_capital), t) }) } }, { key: "id", get: function () { return this.props.id ? this.props.id : "add-share-capital" } }, { key: "render", value: function () { return Object(C.jsx)("div", { className: "modal fade", id: this.id, children: Object(C.jsx)("div", { className: "modal-dialog", children: Object(C.jsxs)("div", { className: "modal-content", children: [Object(C.jsx)("div", { className: "modal-header no-padding", children: Object(C.jsxs)("div", { className: "table-header", children: [Object(C.jsx)("button", { type: "button", className: "close", "data-dismiss": "modal", "aria-hidden": "true", id: "close-add-partners", disabled: this.props.loading, children: Object(C.jsx)("span", { className: "white", children: "\xd7" }) }), this.props.share_capital ? "Edit" : "Add", " Share Capital Data"] }) }), Object(C.jsx)("div", { className: "modal-body", children: Object(C.jsxs)("form", { action: "", onSubmit: this.handleSubmit, children: [Object(C.jsxs)("div", { className: "form-group  d-flex", children: [Object(C.jsx)("label", { className: "col-sm-3", children: "Name" }), Object(C.jsx)("input", { type: "text", className: "form-control", placeholder: "Name", defaultValue: this.props.share_capital ? this.props.share_capital.name : "", disabled: this.props.loading, onChange: this.handleChange, name: "name", required: !0 })] }), Object(C.jsx)(S, { errors: this.state.errors, name: "name" }), Object(C.jsxs)("div", { className: "form-group  d-flex", children: [Object(C.jsx)("label", { className: "col-sm-3", children: "Nominal Value" }), Object(C.jsx)("input", { type: "number", min: 0, className: "form-control", placeholder: "Nominal Value", defaultValue: this.props.share_capital ? this.props.share_capital.nominal_value : "", disabled: this.props.loading, onChange: this.handleChange, name: "nominal_value", required: !0 })] }), Object(C.jsx)(S, { errors: this.state.errors, name: "nominal_value" }), Object(C.jsxs)("div", { className: "form-group  d-flex", children: [Object(C.jsx)("label", { className: "col-sm-3", children: "No of Shares" }), Object(C.jsx)("input", { type: "number", min: 0, className: "form-control", placeholder: "No of Shares", defaultValue: this.props.share_capital ? this.props.share_capital.number_of_shares : "", disabled: this.props.loading, onChange: this.handleChange, name: "number_of_shares", required: !0 })] }), Object(C.jsx)(S, { errors: this.state.errors, name: "number_of_shares", className: "floating-error" }), Object(C.jsx)("br", {}), Object(C.jsxs)("div", { className: "modal-footer no-margin-top bg-white", children: [Object(C.jsxs)("button", { className: "btn btn-sm btn-danger pull-left", "data-dismiss": "modal", type: "reset", disabled: this.props.loading, children: [Object(C.jsx)("i", { className: "ace-icon fa fa-times" }), "Close"] }), Object(C.jsxs)("button", { className: "btn btn-sm btn-info pull-left", type: "submit", disabled: this.props.loading, children: [Object(C.jsx)("i", { className: "ace-icon fa fa-check" }), this.props.loading ? "Saving" : "Save"] })] })] }) })] }) }) }) } }]), s }(a.Component), V = D, I = function (e) { Object(b.a)(s, e); var t = Object(j.a)(s); function s() { return Object(d.a)(this, s), t.apply(this, arguments) } return Object(o.a)(s, [{ key: "del", value: function (e) { this.props.dispatch(y({ encumbrance: e, delete: !0 }, (function () { }))) } }, { key: "render", value: function () { var e, t = this; return Object(C.jsxs)("div", { className: "col-lg-12", children: [Object(C.jsx)(T, { dispatch: this.props.dispatch }), Object(C.jsxs)("div", { className: "d-flex align-items-center justify-content-space-between", children: [Object(C.jsx)("h3", { className: " smaller lighter blue ", children: Object(C.jsx)("strong", { children: "ENCUMBRANCE DETAILS: " }) }), Object(C.jsx)("div", { className: "d-flex", style: { paddingRight: "1rem" }, children: Object(C.jsx)("button", { "data-target": "#add-encumbrance", "data-toggle": "modal", className: "btn btn-sm btn-primary space-x", children: "Add" }) })] }), this.props.encumbrances && this.props.encumbrances.length > 0 && Object(C.jsxs)("table", { className: "table table-striped table-bordered table-hover", children: [Object(C.jsx)("thead", { children: Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "Description of Evidence" }), Object(C.jsx)("th", { children: "Date of Evidence" }), Object(C.jsx)("th", { children: "Secured Amounts" }), Object(C.jsx)("th", { children: "Action" })] }) }), Object(C.jsx)("tbody", { children: null === (e = this.props.encumbrances) || void 0 === e ? void 0 : e.map((function (e, s) { var a = "add-encumbrance-".concat(s); return Object(C.jsxs)("tr", { children: [Object(C.jsx)("td", { children: (null === e || void 0 === e ? void 0 : e.description_of_evidence) || "-" }), Object(C.jsx)("td", { children: (null === e || void 0 === e ? void 0 : e.date_of_evidence) || "-" }), Object(C.jsx)("td", { children: (null === e || void 0 === e ? void 0 : e.secured_amounts) || "-" }), Object(C.jsxs)("td", { children: [Object(C.jsxs)("div", { className: "d-flex justify-content-end", children: [Object(C.jsx)("button", { className: "btn btn-info space-x btn-sm", "data-target": "#".concat(a), "data-toggle": "modal", children: "Edit" }), Object(C.jsx)("button", { className: "btn btn-danger space-x btn-sm", onClick: function () { return t.del(e) }, children: "Del" })] }), Object(C.jsx)(T, { dispatch: t.props.dispatch, encumbrance: e, id: a }, a)] })] }) })) })] })] }) } }]), s }(a.Component), T = function (e) { Object(b.a)(s, e); var t = Object(j.a)(s); function s(e) { var a; return Object(d.a)(this, s), (a = t.call(this, e)).state = { loading: !1, encumbrance: { date_of_evidence: "", description_of_evidence: "", secured_amounts: "", pk: null }, errors: {} }, a.setState = a.setState.bind(Object(h.a)(a)), a.handleChange = a.handleChange.bind(Object(h.a)(a)), a.handleSubmit = a.handleSubmit.bind(Object(h.a)(a)), a.add = a.add.bind(Object(h.a)(a)), a } return Object(o.a)(s, [{ key: "add", value: function () { var e = this; this.validate((function () { Object.keys(e.state.errors).length > 0 || e.setState({ loading: !0 }, (function () { return e.props.dispatch(y({ encumbrance: e.state.encumbrance, delete: !1 }, (function () { e.setState({ loading: !1 }), window.JQuery(".modal").modal("hide") }))) })) })) } }, { key: "validate", value: function (e) { var t = {}; this.state.encumbrance.date_of_evidence || (t.date_of_evidence = "This field is required!"), this.state.encumbrance.description_of_evidence || (t.description_of_evidence = "This field is required!"), this.state.encumbrance.secured_amounts || (t.secured_amounts = "This field is required!"), this.setState({ errors: t }, e) } }, { key: "id", get: function () { return this.props.id ? this.props.id : "add-encumbrance" } }, { key: "handleChange", value: function (e) { this.setState({ encumbrance: Object(u.a)(Object(u.a)({}, this.state.encumbrance), {}, Object(m.a)({}, e.target.name, e.target.value)) }) } }, { key: "handleSubmit", value: function (e) { e.preventDefault(), this.add() } }, { key: "componentDidMount", value: function () { this.props.encumbrance && this.setState({ encumbrance: this.props.encumbrance }) } }, { key: "render", value: function () { return Object(C.jsx)("div", { className: "modal  ".concat(this.state.loading ? "in show" : " in fade"), id: this.id, children: Object(C.jsx)("div", { className: "modal-dialog", children: Object(C.jsxs)("div", { className: "modal-content", children: [Object(C.jsx)("div", { className: "modal-header no-padding", children: Object(C.jsxs)("div", { className: "table-header", children: [Object(C.jsx)("button", { type: "button", className: "close", "data-dismiss": "modal", "aria-hidden": "true", id: "close-encumbrance-data", disabled: this.state.loading, children: Object(C.jsx)("span", { className: "white", children: "\xd7" }) }), this.props.encumbrance ? "Edit" : "Add", " Encumbrance Data"] }) }), Object(C.jsx)("div", { className: "modal-body", children: Object(C.jsxs)("form", { action: "", onSubmit: this.handleSubmit, children: [Object(C.jsxs)("div", { className: "form-group  d-flex", children: [Object(C.jsx)("label", { className: "col-sm-3", children: "Date of Evidence" }), Object(C.jsx)("input", { type: "text", className: "form-control", placeholder: "Date of Evidence", defaultValue: this.props.encumbrance ? this.props.encumbrance.date_of_evidence : "", disabled: this.state.loading, onChange: this.handleChange, name: "date_of_evidence", required: !0 })] }), Object(C.jsx)(S, { errors: this.state.errors, name: "date_of_evidence" }), Object(C.jsx)("br", {}), Object(C.jsxs)("div", { className: "form-group  d-flex", children: [Object(C.jsx)("label", { className: "col-sm-3", children: "Description of Evidence" }), Object(C.jsx)("textarea", { className: "form-control", placeholder: "Description of Evidence", defaultValue: this.props.encumbrance ? this.props.encumbrance.description_of_evidence : "", disabled: this.state.loading, onChange: this.handleChange, name: "description_of_evidence", required: !0 })] }), Object(C.jsx)(S, { errors: this.state.errors, name: "description_of_evidence" }), Object(C.jsx)("br", {}), Object(C.jsxs)("div", { className: "form-group  d-flex", children: [Object(C.jsx)("label", { className: "col-sm-3", children: "Amounts Secured" }), Object(C.jsx)("textarea", { className: "form-control", placeholder: "Amounts Secured", defaultValue: this.props.encumbrance ? this.props.encumbrance.secured_amounts : "", disabled: this.state.loading, onChange: this.handleChange, name: "secured_amounts", required: !0 })] }), Object(C.jsx)(S, { errors: this.state.errors, name: "secured_amounts" }), Object(C.jsx)("br", {}), Object(C.jsxs)("div", { className: "modal-footer no-margin-top bg-white", children: [Object(C.jsxs)("button", { className: "btn btn-sm btn-danger pull-left", "data-dismiss": "modal", type: "reset", disabled: this.state.loading, children: [Object(C.jsx)("i", { className: "ace-icon fa fa-times" }), "Close"] }), Object(C.jsxs)("button", { className: "btn btn-sm btn-info pull-left", type: "submit", disabled: this.state.loading, children: [Object(C.jsx)("i", { className: "ace-icon fa fa-check" }), this.state.loading ? "Saving" : "Save"] })] })] }) })] }) }) }) } }]), s }(a.Component), w = I, F = s(27), P = function (e) { Object(b.a)(s, e); var t = Object(j.a)(s); function s(e) { var a; return Object(d.a)(this, s), (a = t.call(this, e)).state = { officials: [{ name: "", role: "chairman" }, { name: "", role: "vice_chairman" }, { name: "", role: "secretary" }, { name: "", role: "vice_secretary" }, { name: "", role: "treasurer" }, { name: "", role: "vice_treasurer" }], edited: !1, readonly: !0, loading: !1, errors: {} }, a.handleChange = a.handleChange.bind(Object(h.a)(a)), a.toggleEdit = a.toggleEdit.bind(Object(h.a)(a)), a.handleSubmit = a.handleSubmit.bind(Object(h.a)(a)), a } return Object(o.a)(s, [{ key: "officials", get: function () { var e = {}; return this.state.officials.forEach((function (t) { e[t.role] = t.name })), e } }, { key: "componentDidMount", value: function () { this.props.officials && this.setState({ officials: [].concat(Object(F.a)(this.state.officials), Object(F.a)(this.props.officials)) }, (function () { })) } }, { key: "handleChange", value: function (e) { var t = [e.target.name, e.target.value], s = t[0], a = t[1], i = this.state.officials.map((function (e) { return e.role !== s ? e : Object(u.a)(Object(u.a)({}, e), {}, { role: s, name: a }) })); this.setState({ officials: i, edited: !0 }) } }, { key: "handleSubmit", value: function (e) { var t = this; e.preventDefault(), this.setState({ loading: !0, errors: {}, readonly: !0 }, (function () { t.props.dispatch(y({ officials: t.state.officials }, (function (e) { t.setState({ errors: e, loading: !1 }) }))) })) } }, { key: "toggleEdit", value: function () { this.setState({ readonly: !this.state.readonly }) } }, { key: "render", value: function () { var e, t, s, a, i; return Object(C.jsxs)("div", { className: "col-lg-12", children: [Object(C.jsx)("div", { className: "d-flex align-items-center justify-content-space-between", children: Object(C.jsx)("h3", { className: " smaller lighter blue ", children: Object(C.jsx)("strong", { children: "OFFICIALS DETAILS: " }) }) }), Object(C.jsxs)("table", { className: "table table-striped table-bordered", children: [Object(C.jsx)("thead", { children: Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "Role" }), Object(C.jsx)("th", { children: "Full Name" }), Object(C.jsx)("th", { children: "Action" })] }) }), Object(C.jsxs)("tbody", { children: [Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "CHAIRMAN" }), Object(C.jsx)("td", { children: Object(C.jsx)("input", { type: "text", className: "form-control form-control-sm", placeholder: "Chairman's Name", name: "chairman", defaultValue: this.officials.chairman, onChange: this.handleChange, readOnly: this.state.readonly }) })] }), Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "VICE CHAIRMAN" }), Object(C.jsx)("td", { children: Object(C.jsx)("input", { type: "text", className: "form-control form-control-sm", placeholder: "Vice Chairman's Name", name: "vice_chairman", defaultValue: null === (e = this.officials) || void 0 === e ? void 0 : e.vice_chairman, onChange: this.handleChange, readOnly: this.state.readonly }) })] }), Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "SECRETARY" }), Object(C.jsx)("td", { children: Object(C.jsx)("input", { type: "text", className: "form-control form-control-sm", placeholder: "Secretary's Name", name: "secretary", defaultValue: null === (t = this.officials) || void 0 === t ? void 0 : t.secretary, onChange: this.handleChange, readOnly: this.state.readonly }) })] }), Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "VICE SECRETARY" }), Object(C.jsx)("td", { children: Object(C.jsx)("input", { type: "text", className: "form-control form-control-sm", placeholder: "Vice Secretary's Name", name: "vice_secretary", defaultValue: null === (s = this.officials) || void 0 === s ? void 0 : s.vice_secretary, onChange: this.handleChange, readOnly: this.state.readonly }) })] }), Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "TREASURER" }), Object(C.jsx)("td", { children: Object(C.jsx)("input", { type: "text", className: "form-control form-control-sm", placeholder: "Treasurer's Name", name: "treasurer", defaultValue: null === (a = this.officials) || void 0 === a ? void 0 : a.treasurer, onChange: this.handleChange, readOnly: this.state.readonly }) })] }), Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "VICE TREASURER" }), Object(C.jsx)("td", { children: Object(C.jsx)("input", { type: "text", className: "form-control form-control-sm", placeholder: "Vice Treasurer's Name", name: "vice_treasurer", defaultValue: null === (i = this.officials) || void 0 === i ? void 0 : i.vice_treasurer, onChange: this.handleChange, readOnly: this.state.readonly }) }), Object(C.jsx)("td", { rowSpan: 6, style: { borderTop: "none" }, children: Object(C.jsx)("div", { className: "d-flex justify-content-end", children: !this.state.edited || this.state.readonly && !this.state.loading ? Object(C.jsx)("button", { className: "btn btn-sm btn-info space-x", onClick: this.toggleEdit, children: "Edit" }) : Object(C.jsx)("button", { className: "btn btn-sm btn-primary space-x", onClick: this.handleSubmit, disabled: this.state.loading, children: this.state.loading ? "Saving" : "Save" }) }) })] })] })] })] }) } }]), s }(a.Component), B = { "00": { name: "New Request", class: "primary", style: {} }, 11: { name: "Final", class: "success", style: {} }, 22: { name: "In Progress", class: "warning", style: {} }, 33: { name: "Interim Data", class: "info", style: {} }, 44: { name: "Not Reviewed", class: "warning", style: {} } }, M = function (e) { Object(b.a)(s, e); var t = Object(j.a)(s); function s(e) { var a; return Object(d.a)(this, s), (a = t.call(this, e)).state = { conditions: { share_capital: ["company", "international"], partners: ["clg", "company", "international", "business", "llp"], encumbrances: ["company"], officials: ["ngo", "cbo", "trust", "society", "sacco"], objectives: ["cbo", "ngo", "sacco", "society"], member_count: ["cbo"] } }, a.approve = a.approve.bind(Object(h.a)(a)), a } return Object(o.a)(s, [{ key: "componentDidMount", value: function () { this.props.dispatch(_((function (e) { }))) } }, { key: "approve", value: function () { this.props.dispatch(y({ review: { status: "11" } }, (function (e) { }))) } }, { key: "goBack", value: function () { var e = "/html/company/companydataentry.php?request_id=".concat(g("request_id")); window.location.href = e } }, { key: "render", value: function () { var e, t, s, a, i; return Object(C.jsxs)("div", { className: "row", children: [Object(C.jsx)("div", { className: "col-xs-12", children: Object(C.jsx)("h3", { className: "header smaller lighter blue", children: "Add Company/Business Registration Details" }) }), Object(C.jsxs)("h3", { className: "smaller lighter blue", children: [Object(C.jsx)("strong", { children: "SEARCH REF: " }), this.props.request.request_ref_number] }), Object(C.jsxs)("div", { children: [Object(C.jsxs)("table", { id: "simple-table", className: "table table-striped table-bordered table-hover", children: [Object(C.jsx)("thead", { children: Object(C.jsxs)("tr", { children: [Object(C.jsx)("th", { children: "Dataset Name" }), Object(C.jsx)("th", { children: "Registration Number" }), Object(C.jsx)("th", { children: "Client Name" }), Object(C.jsx)("th", { children: "Request Package" }), Object(C.jsx)("th", { children: "Request Date" }), Object(C.jsx)("th", { className: "hidden-480", children: "Status" })] }) }), Object(C.jsx)("tbody", { children: this.props.request.registration_number && Object(C.jsxs)("tr", { children: [Object(C.jsx)("td", { children: Object(C.jsx)("a", { href: "#", children: this.props.request.dataset_name }) }), Object(C.jsx)("td", { children: Object(C.jsx)("a", { href: "#", children: this.props.request.registration_number }) }), Object(C.jsx)("td", { children: Object(C.jsx)("a", { href: "#", children: this.props.request.client_name }) }), Object(C.jsx)("td", { children: Object(C.jsx)("a", { href: "#", children: this.props.request.request_plan }) }), Object(C.jsx)("td", { children: Object(C.jsx)("a", { href: "#", children: this.props.request.request_date }) }), Object(C.jsx)("td", { className: "hidden-480", children: Object(C.jsx)("span", { style: B[this.props.request.status].style, className: "label label-sm label-".concat(B[this.props.request.status].class), children: B[this.props.request.status].name }) })] }) })] }), Object(C.jsx)("div", { className: "space-x", children: Object(C.jsxs)("button", { className: "btn btn-xs btn-primary", onClick: this.goBack, children: [Object(C.jsx)("i", { className: "ace-icon smaller-80 green" }), "Go Back"] }) }), this.props.request.registration_number && Object(C.jsxs)(C.Fragment, { children: [Object(C.jsx)(k, { registration: this.props.business, dispatch: this.props.dispatch, conditions: this.state.conditions }), this.state.conditions.share_capital.includes(String(null === (e = this.props.business) || void 0 === e ? void 0 : e.type).toString()) && Object(C.jsx)(V, { share_capital: this.props.business.share_capital, dispatch: this.props.dispatch }), this.state.conditions.partners.includes(String(null === (t = this.props.business) || void 0 === t ? void 0 : t.type).toString()) && Object(C.jsx)(R, { dispatch: this.props.dispatch, partners: this.props.business.partners, type: this.props.business.type }), this.state.conditions.encumbrances.includes(String(null === (s = this.props.business) || void 0 === s ? void 0 : s.type).toString()) && Object(C.jsx)(w, { dispatch: this.props.dispatch, encumbrances: this.props.business.encumbrances }), this.state.conditions.officials.includes(String(null === (a = this.props.business) || void 0 === a ? void 0 : a.type).toString()) && Object(C.jsx)(P, { dispatch: this.props.dispatch, officials: this.props.business.officials }), "11" !== String(null === (i = this.props.request) || void 0 === i ? void 0 : i.status).toString() && this.props.business.business_name && Object(C.jsx)("div", { style: { marginLeft: "9px", marginBottom: "3px" }, onClick: this.approve, children: Object(C.jsx)("button", { className: "btn btn-sm space-x btn-success", children: "APPROVE" }) }), Object(C.jsx)(L, { request: this.props.request })] })] })] }) } }]), s }(a.Component), L = function (e) { var t = e.request; return Object(C.jsx)("div", { className: "col-lg-12", children: Object(C.jsx)("table", { id: "simple-table", className: "table  table-striped  table-bordered table-hover", children: Object(C.jsx)("tbody", { children: Object(C.jsxs)("tr", { children: [Object(C.jsx)("td", { children: Object(C.jsx)("strong", { children: "REVIEW NOTES:" }) }), Object(C.jsx)("td", { children: Object(C.jsx)("span", { className: "label label-sm ".concat("11" === t.status ? "label-success" : "label-warning"), children: "11" === t.status ? "APPROVED" : "NOT REVIEWED" }) }), Object(C.jsx)("td", { children: Object(C.jsx)("strong", { children: "VERIFIED BY:" }) }), Object(C.jsx)("td", { children: t.verified_by || "-" }), Object(C.jsx)("td", { children: Object(C.jsx)("strong", { children: "VERIFIED DATE:" }) }), Object(C.jsx)("td", { children: t.verified_date || "-" })] }) }) }) }) }, U = Object(p.b)((function (e) { var t; return { business: (null === (t = e.request) || void 0 === t ? void 0 : t.business) || {}, request: e.request } }))(M); function H() { return Object(C.jsx)(c.a, { children: Object(C.jsx)(l.c, { children: Object(C.jsx)(l.a, { path: "/", children: Object(C.jsx)(U, {}) }) }) }) } var G = s(18); var Y = s(37), J = Object(G.b)({ request: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t = arguments.length > 1 ? arguments[1] : void 0; switch (t.type) { case v: return Object(u.a)(Object(u.a)({}, e), {}, { business: Object(u.a)(Object(u.a)({}, e.business ? e.business : {}), t.payload) }); case N: return Object(u.a)(Object(u.a)({}, e), t.payload); default: return e } } }), K = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || G.c, Q = Object(G.d)(J, K(Object(G.a)(Y.a))), W = window.ace; var X = function () { return Object(C.jsx)(C.Fragment, { children: Object(C.jsxs)(p.a, { store: Q, children: [Object(C.jsxs)("div", { className: "breadcrumbs", id: "breadcrumbs", children: [Object(C.jsxs)("script", { type: "text/javascript", children: ["try ", W.settings.check("breadcrumbs", "fixed"), " catch (e) "] }), Object(C.jsxs)("ul", { className: "breadcrumb", children: [Object(C.jsxs)("li", { children: [Object(C.jsx)("i", { className: "ace-icon fa fa-home home-icon" }), Object(C.jsx)("a", { href: "#", children: "Home" })] }), Object(C.jsx)("li", { children: Object(C.jsx)("a", { href: "#", children: "Peleza Modules" }) }), Object(C.jsx)("li", { children: Object(C.jsx)("a", { href: "#", children: "Company" }) }), Object(C.jsx)("li", { className: "active", children: "Company Registration Details" })] }), Object(C.jsx)("div", { className: "nav-search", id: "nav-search" })] }), Object(C.jsx)("div", { className: "page-content", children: Object(C.jsx)(H, {}) })] }) }) }, z = function (e) { e && e instanceof Function && s.e(3).then(s.bind(null, 68)).then((function (t) { var s = t.getCLS, a = t.getFID, i = t.getFCP, n = t.getLCP, r = t.getTTFB; s(e), a(e), i(e), n(e), r(e) })) }; r.a.render(Object(C.jsx)(i.a.StrictMode, { children: Object(C.jsx)(X, {}) }), document.getElementById("root")), z() } }, [[67, 1, 2]]]);
//# sourceMappingURL=main.9406c2d4.chunk.js.map